#!/usr/bin/env bash
#### Sonar - A WiFi Keepalive daemon
####
#### Written by Stephan Wendel aka KwadFan <me@stephanwe.de>
#### Copyright 2022
#### https://github.com/mainsail-crew/sonar
####
#### This File is distributed under GPLv3
####

# shellcheck enable=require-variable-braces

# Exit on Errors
set -Ee

## Helper funcs
# Declare vars
function init_local_vars {
    # Base Paths
    BASE_SNR_PATH="$(dirname "$(readlink -f "${0}")")"
    declare -r BASE_SNR_PATH
    BASE_USER_HOME="$(dirname "$(dirname "$(readlink -f "${0}")")")"
    declare -r BASE_USER_HOME
    SNR_LOG_PATH="/var/log/sonar.log"
    declare -r SNR_LOG_PATH
}

## Import Librarys
function import_libs {
    # shellcheck source-path=SCRIPTDIR/libs/
    source "${BASE_SNR_PATH}/libs/configparser.sh"
    source "${BASE_SNR_PATH}/libs/core.sh"
    source "${BASE_SNR_PATH}/libs/get_config.sh"
    source "${BASE_SNR_PATH}/libs/logging.sh"
    source "${BASE_SNR_PATH}/libs/messages.sh"
}

## Initialize setup Variables
function init_setup_vars {
    # Set setup scope variables
    # Version
    SNR_LOCAL_VERSION="$(self_version)"
    declare -r SNR_LOCAL_VERSION

    # Logging
    SNR_PERSISTANT_LOG="$(get_param sonar persistant_log)"
    declare -r SNR_PERSISTANT_LOG
}

    # init_log_entry
    # initial_check
    # while true; do
    #     keepalive
    #     sleep "${SONAR_CHECK_INTERVAL}"
    # done


#### MAIN #####
# Step 1: Initialize script global variables
init_local_vars

# Step 2: Import Libraries
import_libs

# Step 3: Parse Arguments
## Args given?
if [[ "$#" -ne 0 ]]; then
    ## Parse Args
    while getopts ":dvh" arg; do
        case "${arg}" in
            d )
                printf "\e[33mWARN: \e[0mRunning sonar in Debug Mode ...\n"
                SONAR_DEBUG="1"
                set -x
            ;;
            v )
                printf "Sonar Version: \e[34m%s\e[0m\n" "$(self_version)"
                exit 0
            ;;
            h )
                help_msg
                exit 0
            ;;
            \?)
                wrong_args_msg
                exit 1
            ;;
        esac
    done
fi

# Step 4: Make sure script runs with root privileges
if [[ "$(id -u)" != "0" ]] && [[ "${SONAR_DEBUG}" != "1" ]]; then
    do_run_as_root_msg
    exit 1
fi

# Step 5: Initialize Setup Variables
init_setup_vars

# Step 6: Initialize logging
init_log_entry

# Step 7: Initial Check
initial_check

# Step X: Loop
while true; do
    keepalive
    sleep 10
done

exit 0
